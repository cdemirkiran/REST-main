FORMAT: 1A
HOST: https://www.ascribe.io/api

# ascribe REST API

Main RESTful API for ascribe ownership web service. https://www.ascribe.io

- First public release: 2015-04-26
- Current public release: 2015-07-01, version 0.1


## Overview
Integration has these actions:

1. Register your app/marketplace and request an access token. This is a one time action.
2. Register a piece.
3. Check the status of a piece.

## Authorization Flow
Let's call the marketplace Makx.

As authentication is used to connect and transfer data between Makx and ascribe, we
use an encrypted connection (HTTPS).

Ascribe authorizes applications via tokens. Each token is an alphanumeric that
encodes the following information:

- The ID of the application that was granted access.
- The ID of the user who granted access to personal data.
- A set of actions available to the application.

![Authorization Flow PNG](https://s3-us-west-2.amazonaws.com/ascribe0/public/rest_doc/ascribe_api_workflow.png)


## Register your Application or Marketplace
The developer (e.g. admin@makx.com) should have an [ascribe account](https://www.ascribe.io), 
login and go to settings>API settings to register
the application or marketplace with following fields:

- Name: `name of the marketplace`

The user can then create a token of type 'Bearer'.

# SPOOL API

SPOOL is the Secure Public Online Ownership Ledger.
An in-depth specification of the protocol can be found on
[https://github.com/ascribe/spool](https://github.com/ascribe/spool) 


# Group Pieces


## Piece [/pieces/{piece_id}/]

+ Parameters
    + piece_id (integer) - The id of the Piece.


+ Model (application/json)

    ```json
    {
        "data": {
            "id": 8530,
            "title": "art1",
            "artist_name": "art1",
            "num_editions": 5,
            "user_registered": "foo2",
            "datetime_registered": "2015-07-01T13:33:38.390154Z",
            "date_created": "2015-01-01",
            "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png",
            "license_type": {
                "name": "Attribution without restriction",
                "code": "default",
                "organization": "ascribe",
                "url": "https://www.ascribe.io/faq/#legals"
            }
        },
        "meta": {
            "code": 200,
        }
    }
    ```

### Retrieve a Piece [GET]

+ Request

    + Header

            Authorization: Bearer 2GJT0yFOnHYKtp9sgNak4GURL9jpKD

+ Response 200

    [Piece][]

### Delete a Piece [DELETE]

+ Response 204



## Piece Collection [/pieces/]

+ Model (application/json)

    ```json
    {
        "pieces": [
            {
                "id": 8530,
                "title": "art1",
                "artist_name": "art1",
                "num_editions": 5,
                "user_registered": "foo2",
                "datetime_registered": "2015-07-01T13:33:38.390154Z",
                "date_created": "2015-01-01",
                "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png",
                "license_type": {
                    "name": "Attribution without restriction",
                    "code": "default",
                    "organization": "ascribe",
                    "url": "https://www.ascribe.io/faq/#legals"
                }
            }
        ]
    }
    ```

### Create a Piece [POST]

+ Attributes
    + file_url (string) - The url of the digital file
    + title (string) - The title of the artwork
    + artist_name (string) - The artist name
    + date_created (string, optional) - <YYYY-MM-DD> The creation date
    + num_editions (number, optional) - The number of editions (will create as many pieces)
    + consign (boolean, optional) - Set to True if the marketplace acts as a consignee
    
+ Request (application/json)

    + Header
        
            Authorization: Bearer <your_api_token>
    + Body
    
            {
                "file_url": "https://ascribe0.s3.amazonaws.com/local/admin@makx.com/elmo/digitalworkfile/elmo.jpg",
                "title": "New Piece",
                "artist_name": "New Artist"
            }

+ Response 201 (application/json)

        {
            "notification": "You have successfully registered \"New Piece\" by New Artist, 1 editions.",
            "success": true,
            "edition": {
                "id": 8542,
                "title": "New Piece",
                "artist_name": "New Artist",
                "num_editions": 1,
                "user_registered": "foo2",
                "datetime_registered": "2015-07-01T13:40:28.635Z",
                "date_created": "2015-01-01",
                "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/local/foo2/ascribe_animated_medium/thumbnail/ascribe_animated_medium.gif.png",
                "license_type": {
                    "name": "Attribution without restriction",
                    "code": "default",
                    "organization": "ascribe",
                    "url": "https://www.ascribe.io/faq/#legals"
                },
                "edition_number": 0,
                "bitcoin_id": "13Ftd8yNMJPwRA9EaYpctd2TSjKgi9duoz",
                "acl": [    
                    "edit",
                    "consign",
                    "transfer",
                    "loan",
                    "share",
                    "download",
                    "view",
                    "delete",
                    "coa"
                ],
                "request_action": null,
                "parent": 8532
            }
        }

    
### List all Pieces [GET]

+ Response 200

    [Piece Collection][]
    
    
# Group Editions

## Edition [/editions/{bitcoin_id}/]

+ Parameters
    + bitcoin_id (string) - The bitcoin ID of the edition
    
+ Model (application/json)

    ```json
    {
        "edition": {
            "id": 8531,
            "title": "art1",
            "artist_name": "art1",
            "num_editions": 50,
            "user_registered": "foo",
            "datetime_registered": "2015-07-01T09:48:51.037Z",
            "date_created": "2015-01-01",
            "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png",
            "edition_number": 1,
            "bitcoin_id": "1N1kaRd7A3vYR4d1sfysPHQMMURoHCtmWY",
            "acl": [
                "edit",
                "consign",
                "transfer",
                "loan",
                "share",
                "download",
                "view",
                "delete",
                "coa"
            ],
            "request_action": null,
            "parent": 8530,
            "extra_data": {},
            "digital_work": {
                "id": 1890,
                "url": "https://d1qjsxua1o9x03.cloudfront.net/local/foo/images-18/digitalwork/images-18.jpeg",
                "url_safe": "https://d1qjsxua1o9x03.cloudfront.net/local%2Ffoo%2Fimages-18%2Fdigitalwork%2Fimages-18.jpeg",
                "mime": "image",
                "hash": "39971523c58d1d605b6b3f0e96803c25",
                "encoding_urls": null,
                "isEncoding": 0
            },
            "other_data": null,
            "hash_as_address": "14Ab6qQcg2CaCE8RBrJtSFqEjsiremApXC",
            "owner": "foo",
            "btc_owner_address_noprefix": "1N1kaRd7A3vYR4d1sfysPHQMMURoHCtmWY",
            "ownership_history": [
                [
                    "Jul. 01, 2015, 09:48:51",
                    "Registered by foo"
                ]
            ],
            "consign_history": [],
            "loan_history": [],
            "coa": null,
            "status": [],
            "pending_new_owner": null,
            "consignee": null,
            "note_from_user": null,
            "public_note": null,
            "license_type": {
                "name": "Attribution without restriction",
                "code": "default",
                "organization": "ascribe",
                "url": "https://www.ascribe.io/faq/#legals"
            }
        }
    }
    ```
    
### Retrieve an Edition [GET]

+ Request

    + Header
            
            Authorization: Bearer 2GJT0yFOnHYKtp9sgNak4GURL9jpKD

+ Response 200

    [Edition][]


### Delete an Edition [DELETE]

+ Request

    + Header

            Authorization: Bearer 2GJT0yFOnHYKtp9sgNak4GURL9jpKD

+ Response 200

        {
            "notification": "You have successfully deleted 1 editions.",
            "success": true
        }


## Edition Collection [/editions/]

+ Model (application/json)

    ```json
    {
        "editions": [
            {
                "id": 8530,
                "title": "art1",
                "artist_name": "art1",
                "num_editions": 50,
                "user_registered": "foo",
                "datetime_registered": "2015-07-01T09:48:51.037Z",
                "date_created": "2015-01-01",
                "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png",
                "edition_number": 0,
                "bitcoin_id": "1CAiGhr6dSmrABAJud47PaUtZ8qvn88Tc4",
                "acl": [
                    "edit",
                    "consign",
                    "transfer",
                    "loan",
                    "share",
                    "download",
                    "view",
                    "delete",
                    "coa"
                ],
                "request_action": null,
                "parent": 8530
            },
            ...
        ]
    }
    ```

### Create an Edition [POST]

+ Attributes
    + piece_id (number) - The ID of the piece
    + num_editions (number) - Number of editions for the piece

+ Request (application/json)

    + Header
        
            Authorization: Bearer 2GJT0yFOnHYKtp9sgNak4GURL9jpKD
    
    + Body
    
            {
                "piece_id": 1071,
                "num_editions": 10
            } 

+ Response 201

        {
            "success": true,
            "notification": "You successfully registered 10 editions for piece with ID 1ADJ5fYt1Hq4acL3e7gVr7st6SD8rZq51d."
        }

    
### List all Editions [GET]

+ Request

    + Header

            Authorization: Bearer 2GJT0yFOnHYKtp9sgNak4GURL9jpKD

+ Response 200

    [Edition Collection][]
    
    
# Group Ownership

The rich ownership layer of ascribe you allows to manage your digital assets.

A piece is registered in the blockchain upon creation. When the number of editions
is specified, each edition is only registered in the blockchain right before any
ownership action (transfer, consign, loan, ...) has been performed.


## Registration [/ownership/registrations/{id}/]

+ Parameters
    + id (integer) - The ID of the registration.

+ Model (application/json)

    ```json
    "registration": {
        "id": 5443,
        "piece": {
            "id": 8530,
            "title": "art1",
            "artist_name": "art1",
            "num_editions": 50,
            "user_registered": "foo",
            "datetime_registered": "2015-07-01T09:48:51.037053Z",
            "date_created": "2015-01-01",
            "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png"
        },
        "type": "OwnershipRegistration",
        "datetime": "2015-07-01T09:48:51.497008Z",
        "btc_tx": {
            "datetime": "2015-07-01T09:48:51.587300Z",
            "service": "<bitcoin.bitcoin_service.BitcoinDaemonMainnetService object at 0x7fb776b9a090>",
            "from_address": "12udvE3zmbQLhtSGZUqqAvGWSKDUCpbgoq",
            "inputs": "[{'output': 'c63b6cfcda31371d94e28a734dcc0acbcd30047c03c23340601d806851d711f6:3', 'value': 28200}]",
            "outputs": "[{'value': 600, 'address': u'1NHXUfW1MfKsU83yGY52xrTDVux8UwMXio'}, {'value': 600, 'address': u'1HCnLDnbHvgddPKGkkYXaQtLZzbc23P3cE'}, {'value': 600, 'address': u'1CAiGhr6dSmrABAJud47PaUtZ8qvn88Tc4'}]",
            "mining_fee": 10000,
            "tx": "ea382a621f0f91a1a2291b3a8382d56ad049938dac9a2d3da73253d03be4f536",
            "block_height": null,
            "status": 2,
            "spoolverb": "ASCRIBESPOOL01REGISTER0"
        },
        "new_owner": {
            "email": "foo@mailinator.com",
            "username": "foo",
            "id": 1349,
            "prize_role": {
                "type": "",
                "prize": {"name": ""},
                "round": null,
                "canVote": false,
                "canSubmit": false
            }
        },
        "prev_owner": {
            "email": "foo@mailinator.com",
            "username": "foo",
            "id": 1349,
            "prize_role": {
                "type": "",
                "prize": {"name": ""},
                "round": null,
                "canVote": false,
                "canSubmit": false
            }
        }
    }
    ```

### Retrieve a registration [GET]

+ Response 200

    [Registration][]

### Delete a Registration [DELETE]

+ Response 204


## Registration Collection [/ownership/registrations/]

+ Model (application/json)

    ```json
    {
        "registrations": [
            {
                "id": 5443,
                "piece": {
                    "id": 8530,
                    "title": "art1",
                    "artist_name": "art1",
                    "num_editions": 50,
                    "user_registered": "foo",
                    "datetime_registered": "2015-07-01T09:48:51.037053Z",
                    "date_created": "2015-01-01",
                    "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png"
                },
                "type": "OwnershipRegistration",
                "datetime": "2015-07-01T09:48:51.497008Z",
                "btc_tx": {
                    "datetime": "2015-07-01T09:48:51.587300Z",
                    "service": "<bitcoin.bitcoin_service.BitcoinDaemonMainnetService object at 0x7fb776c20cd0>",
                    "from_address": "12udvE3zmbQLhtSGZUqqAvGWSKDUCpbgoq",
                    "inputs": "[{'output': 'c63b6cfcda31371d94e28a734dcc0acbcd30047c03c23340601d806851d711f6:3', 'value': 28200}]",
                    "outputs": "[{'value': 600, 'address': u'1NHXUfW1MfKsU83yGY52xrTDVux8UwMXio'}, {'value': 600, 'address': u'1HCnLDnbHvgddPKGkkYXaQtLZzbc23P3cE'}, {'value': 600, 'address': u'1CAiGhr6dSmrABAJud47PaUtZ8qvn88Tc4'}]",
                    "mining_fee": 10000,
                    "tx": "ea382a621f0f91a1a2291b3a8382d56ad049938dac9a2d3da73253d03be4f536",
                    "block_height": null,
                    "status": 2,
                    "spoolverb": "ASCRIBESPOOL01REGISTER0"
                },
                "new_owner": {
                    "email": "foo@mailinator.com",
                    "username": "foo",
                    "id": 1349,
                    "prize_role": {
                        "type": "",
                        "prize": {"name": ""},
                        "round": null,
                        "canVote": false,
                        "canSubmit": false
                    }
                },
                "prev_owner": {
                    "email": "foo@mailinator.com",
                    "username": "foo",
                    "id": 1349,
                    "prize_role": {
                        "type": "",
                        "prize": {"name": ""},
                        "round": null,
                        "canVote": false,
                        "canSubmit": false
                    }
                },
                "new_btc_address": null,
                "prev_btc_address": "12udvE3zmbQLhtSGZUqqAvGWSKDUCpbgoq",
                "status": null
            },
            ...
        ]
    }
    ```

### Create a Registration [POST]

+ Request

    [Registration][]

+ Response 201

    [Registration][]

    
### List all Registrations [GET]

+ Response 200

    [Registration Collection][]
    
    

## Transfer [/ownership/transfers/{id}/]

+ Parameters
    + id (integer) - The ID of the transfer.

+ Model (application/json)

    ```json
    {
    }
    ```

### Retrieve a transfer [GET]

+ Response 200

    [Transfer][]

### Delete a Transfer [DELETE]

+ Response 204


## Transfer Collection [/ownership/transfers/]

+ Model (application/json)

    ```json
    {
        "transfers": [
            {},
            {},
            {},
            ...
        ]
    }
    ```

### Create a Transfer [POST]

+ Request

    [Transfer][]

+ Response 201

    [Transfer][]

    
### List all Transfers [GET]

+ Response 200

    [Transfer Collection][]
    
    
    
## Consignment [/ownership/consigns/{id}/]

+ Parameters
    + id (integer) - The ID of the consignment

+ Model (application/json)

    ```json
    {
    }
    ```

### Retrieve a consignment [GET]

+ Response 200

    [Consignment][]

### Delete a consignment [DELETE]

+ Response 204


## Consignment Collection [/ownership/consigns/]

+ Model (application/json)

    ```json
    {
        "consigns": [
            {},
            {},
            {},
            ...
        ]
    }
    ```

### Create a consignment [POST]

+ Request

    [Consignment][]

+ Response 201

    [Consignment][]

    
### List all consignments [GET]

+ Response 200

    [Consignment Collection][]
    
    
## Unconsignment [/ownership/unconsigns/{id}/]

+ Parameters
    + id (integer) - The ID of the unconsignment

+ Model (application/json)

    ```json
    {
    }
    ```

### Retrieve a unconsignment [GET]

+ Response 200

    [Unconsignment][]

### Delete an unconsignment [DELETE]

+ Response 204


## Unconsignment Collection [/ownership/unconsigns/]

+ Model (application/json)

    ```json
    {
        "unconsigns": [
            {},
            {},
            {},
            ...
        ]
    }
    ```

### Create an Unconsignment [POST]

+ Request

    [Unconsignment][]

+ Response 201

    [Unconsignment][]

    
### List all Unconsignments [GET]

+ Response 200

    [Unconsignment Collection][]
    
    
    
## Loan [/ownership/loans/{id}/]

+ Parameters
    + id (integer) - The ID of the loan

+ Model (application/json)

    ```json
    {
    }
    ```

### Retrieve a loan [GET]

+ Response 200

    [Loan][]

### Delete an loan [DELETE]

+ Response 204


## Loaned Pieces [/ownership/loans/pieces/]

+ Model (application/json)

    ```json
    {
        "loans": [
            {},
            {},
            {},
            ...
        ]
    }
    ```

### List all loans for pieces [GET]

+ Response 200

    [Loaned Pieces][]


## Loaned Editions [/ownership/loans/editions/]

### Lend an edtion [POST]

+ Request

    + Header
        
            Authorization: Bearer 2GJT0yFOnHYKtp9sgNak4GURL9jpKD
    
    + Body
    
            {
                "bitcoin_id": "157od1WGsmh7ctYXEstTbsA7pzx6BoWU9W",
                "loanee": "foo@mailinator.com",
                "password": "mypassword",
                "startdate": "2015-05-29",
                "enddate": "2015-06-01",
                "loan_message": "I loan this piece to you"
            }

+ Response 201

        {
            "notification": "You have successfully loaned 1 edition(s) to foo2@mailinator.com, pending their confirmation.",
            "success": true
        }
        
### List all loans for edtitons [GET]

+ Response 200

        {}