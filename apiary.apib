FORMAT: 1A
HOST: https://www.ascribe.io/api

# ascribe REST API

Main RESTful API for ascribe ownership web service. https://www.ascribe.io

- First public release: 2015-04-26
- Current public release: 2015-07-01, version 0.1


## Overview
Integration has these actions:

1. Register your app/marketplace and request an access token. This is a one time action.
2. Register a piece.
3. Check the status of a piece.

## Authorization Flow
Let's call the marketplace Makx.

As authentication is used to connect and transfer data between Makx and ascribe, we
use an encrypted connection (HTTPS).

Ascribe authorizes applications via tokens. Each token is an alphanumeric that
encodes the following information:

- The ID of the application that was granted access.
- The ID of the user who granted access to personal data.
- A set of actions available to the application.

![Authorization Flow PNG](https://s3-us-west-2.amazonaws.com/ascribe0/public/rest_doc/ascribe_api_workflow.png)


## Register your Application or Marketplace
The developer (e.g. admin@makx.com) should have an [ascribe account](https://www.ascribe.io), 
login and go to settings>API settings to register
the application or marketplace with following fields:

- Name: `name of the marketplace`

The user can then create a token of type 'Bearer'.

# SPOOL API

SPOOL is the Secure Public Online Ownership Ledger.
An in-depth specification of the protocol can be found on
[https://github.com/ascribe/spool](https://github.com/ascribe/spool) 


# Group Pieces

Group of all pieces related resources.

## Piece [/pieces/{piece_id}/]

A Piece is the ...

+ Parameters
    + piece_id (integer) - The id of the Piece.


+ Model (application/json)

    ```json
    {
        "data": {
            "id": 8530,
            "title": "art1",
            "artist_name": "art1",
            "num_editions": 5,
            "user_registered": "foo2",
            "datetime_registered": "2015-07-01T13:33:38.390154Z",
            "date_created": "2015-01-01",
            "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png",
            "license_type": {
                "name": "Attribution without restriction",
                "code": "default",
                "organization": "ascribe",
                "url": "https://www.ascribe.io/faq/#legals"
            }
        },
        "meta": {
            "code": 200,
        }
    }
    ```

### Retrieve a Piece [GET]
Returns a specific Piece.

+ Response 200

    [Piece][]

### Delete a Piece [DELETE]
Delete a Piece.

+ Response 204



## Piece Collection [/pieces/]

A collection of pieces.

+ Model (application/json)

    ```json
    {
        "pieces": [
            {
                "id": 8530,
                "title": "art1",
                "artist_name": "art1",
                "num_editions": 5,
                "user_registered": "foo2",
                "datetime_registered": "2015-07-01T13:33:38.390154Z",
                "date_created": "2015-01-01",
                "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png",
                "license_type": {
                    "name": "Attribution without restriction",
                    "code": "default",
                    "organization": "ascribe",
                    "url": "https://www.ascribe.io/faq/#legals"
                }
            }
        ]
    }
    ```

### Create a Piece [POST]

Create a new Piece object.

+ Request

    [Piece][]

+ Response 201

    [Piece][]

    
### List all Pieces [GET]

Lists all pieces.

+ Response 200

    [Piece Collection][]
    
    
# Group Editions

Group of all editions related resources.

## Edition [/editions/{bitcoin_id}/]

An Edition is ...

+ Parameters
    + bitcoin_id (string) - The bitcoin ID of the edition.
    
+ Model (application/json)

    ```json
    {
        "edition": {
            "id": 8531,
            "title": "art1",
            "artist_name": "art1",
            "num_editions": 50,
            "user_registered": "foo",
            "datetime_registered": "2015-07-01T09:48:51.037Z",
            "date_created": "2015-01-01",
            "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png",
            "edition_number": 1,
            "bitcoin_id": "1N1kaRd7A3vYR4d1sfysPHQMMURoHCtmWY",
            "acl": [
                "edit",
                "consign",
                "transfer",
                "loan",
                "share",
                "download",
                "view",
                "delete",
                "coa"
            ],
            "request_action": null,
            "parent": 8530,
            "extra_data": {},
            "digital_work": {
                "id": 1890,
                "url": "https://d1qjsxua1o9x03.cloudfront.net/local/foo/images-18/digitalwork/images-18.jpeg",
                "url_safe": "https://d1qjsxua1o9x03.cloudfront.net/local%2Ffoo%2Fimages-18%2Fdigitalwork%2Fimages-18.jpeg",
                "mime": "image",
                "hash": "39971523c58d1d605b6b3f0e96803c25",
                "encoding_urls": null,
                "isEncoding": 0
            },
            "other_data": null,
            "hash_as_address": "14Ab6qQcg2CaCE8RBrJtSFqEjsiremApXC",
            "owner": "foo",
            "btc_owner_address_noprefix": "1N1kaRd7A3vYR4d1sfysPHQMMURoHCtmWY",
            "ownership_history": [
                [
                    "Jul. 01, 2015, 09:48:51",
                    "Registered by foo"
                ]
            ],
            "consign_history": [],
            "loan_history": [],
            "coa": null,
            "status": [],
            "pending_new_owner": null,
            "consignee": null,
            "note_from_user": null,
            "public_note": null,
            "license_type": {
                "name": "Attribution without restriction",
                "code": "default",
                "organization": "ascribe",
                "url": "https://www.ascribe.io/faq/#legals"
            }
        }
    }
    ```
    
### Retrieve an Edition [GET]
Returns a specific Edition.

+ Response 200

    [Edition][]

### Delete an Edition [DELETE]
Delete an Edition.

+ Response 204



## Edition Collection [/editions/]

A collection of editions.

+ Model (application/json)

    ```json
    {
        "editions": [
            {
                "id": 8530,
                "title": "art1",
                "artist_name": "art1",
                "num_editions": 50,
                "user_registered": "foo",
                "datetime_registered": "2015-07-01T09:48:51.037Z",
                "date_created": "2015-01-01",
                "thumbnail": "https://d1qjsxua1o9x03.cloudfront.net/media/thumbnails/ascribe_spiral.png",
                "edition_number": 0,
                "bitcoin_id": "1CAiGhr6dSmrABAJud47PaUtZ8qvn88Tc4",
                "acl": [
                    "edit",
                    "consign",
                    "transfer",
                    "loan",
                    "share",
                    "download",
                    "view",
                    "delete",
                    "coa"
                ],
                "request_action": null,
                "parent": 8530
            },
            ...
        ]
    }
    ```

### Create an Edition [POST]

Create a new Edition object.

+ Request

    [Edition][]

+ Response 201

    [Edition][]

    
### List all Editions [GET]

Lists all editions.

+ Response 200

    [Edition Collection][]
